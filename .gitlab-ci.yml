stages:
    - build

.build-container: &build-container
    image: docker:latest
    stage: build
    services:
        - docker:dind
    variables:
        TARGET: UNKNOWN
        DOCKERFILE: UNKNOWN
        FOLDER: UNKNOWN
        DOCKER_ARGS: ""
    script:
        - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
        - echo "Building target '$TARGET' image to $CI_REGISTRY_IMAGE/$TARGET"
        - cd "${FOLDER}"
        - '[[ "${USE_CACHE}" == "yes" ]] && sh -c "docker pull $CI_REGISTRY_IMAGE/${TARGET} || echo No upstream image to cache from, will have to build a new one from scratch" || echo "Building new one from scratch"'
        - export DOCKER_OPTS="--force-rm=true --compress=true"
        - '[[ "${USE_CACHE}" == "yes" ]] && export DOCKER_OPTS="${DOCKER_OPTS} --cache-from $CI_REGISTRY_IMAGE/${TARGET}" || export DOCKER_OPTS="${DOCKER_OPTS} --no-cache=true"'
        - echo "Executing 'docker build ${DOCKER_OPTS} ${DOCKER_ARGS} -t ${TARGET} -f ${DOCKERFILE} .'"
        - DEBIAN_FRONTEND=noninteractive docker build ${DOCKER_OPTS} ${DOCKER_ARGS} -t ${TARGET} -f ${DOCKERFILE} .
        - docker tag ${TARGET} ${CI_REGISTRY_IMAGE}/${TARGET}
        - docker push ${CI_REGISTRY_IMAGE}/${TARGET}

ubuntu-18.04:
    <<: *build-container
    variables:
        TARGET: crosstool-ng-${CI_JOB_NAME}:1.24.0
        DOCKERFILE: Dockerfile
        FOLDER: debian-based
        DOCKER_ARGS: "--build-arg SYSTEM=ubuntu --build-arg VERSION=18.04 --build-arg CROSSTOOL_NG_VERSION=crosstool-ng-1.24.0"
